[
    {
        "id": "66a4ff9e.6ffac",
        "type": "tab",
        "label": "Dummy uC",
        "disabled": false,
        "info": ""
    },
    {
        "id": "363ae2191f140465",
        "type": "tab",
        "label": "Commands",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e5a4ca6.b600a38",
        "type": "tab",
        "label": "MQTT - sensors db",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c4caa3f9e2fc8dc9",
        "type": "tab",
        "label": "Graphs",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "eae119be.e0ca48",
        "type": "tab",
        "label": "log",
        "disabled": false,
        "info": ""
    },
    {
        "id": "0c50d7e1ab364813",
        "type": "tab",
        "label": "Datetime period",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e801217b.23cd1",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "menu",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "2c5fd3be.69b83c",
        "type": "mqtt-broker",
        "name": "hiveMQ free",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "tls": "",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "70f0c9a6.b4de68",
        "type": "ui_tab",
        "name": "Log",
        "icon": "list",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "fc5603e7.a1d5c",
        "type": "ui_group",
        "name": "Readings",
        "tab": "70f0c9a6.b4de68",
        "order": 2,
        "disp": true,
        "width": "18",
        "collapse": true,
        "className": ""
    },
    {
        "id": "b2797592163729b8",
        "type": "mqtt-broker",
        "name": "hiveMQ console",
        "broker": "350fd0725fa14a069e04d387121e69f7.s2.eu.hivemq.cloud",
        "port": "8883",
        "tls": "",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "fe8897304a518907",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "788b23d842bc47a5",
        "type": "ui_group",
        "name": "select id",
        "tab": "fe8897304a518907",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8de535f3426c7c74",
        "type": "ui_group",
        "name": "update datetime",
        "tab": "fe8897304a518907",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7c92c8983045d68c",
        "type": "ui_group",
        "name": "System Voltage",
        "tab": "fe8897304a518907",
        "order": 6,
        "disp": true,
        "width": "18",
        "collapse": true,
        "className": ""
    },
    {
        "id": "c34d6f8a.52a95",
        "type": "sqlitedb",
        "db": "C:\\Users\\mirco\\Desktop\\sqlite\\13giu.db",
        "mode": "RWC"
    },
    {
        "id": "398221e737df06e0",
        "type": "ui_group",
        "name": "System Current",
        "tab": "fe8897304a518907",
        "order": 7,
        "disp": true,
        "width": "18",
        "collapse": true,
        "className": ""
    },
    {
        "id": "c34fbfa77921ce15",
        "type": "ui_group",
        "name": "System Info",
        "tab": "fe8897304a518907",
        "order": 4,
        "disp": true,
        "width": "18",
        "collapse": true,
        "className": ""
    },
    {
        "id": "032882b2b2fecdf9",
        "type": "ui_group",
        "name": "Delete",
        "tab": "fe8897304a518907",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a82ebc6fad682ccd",
        "type": "ui_group",
        "name": "Data",
        "tab": "fe8897304a518907",
        "order": 8,
        "disp": true,
        "width": "18",
        "collapse": true,
        "className": ""
    },
    {
        "id": "2279048b0c248bb2",
        "type": "ui_spacer",
        "z": "c4caa3f9e2fc8dc9",
        "name": "spacer",
        "group": "8de535f3426c7c74",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "9ae8db036adc2590",
        "type": "ui_spacer",
        "z": "c4caa3f9e2fc8dc9",
        "name": "spacer",
        "group": "8de535f3426c7c74",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "523f7f5184fe88b5",
        "type": "ui_spacer",
        "z": "c4caa3f9e2fc8dc9",
        "name": "spacer",
        "group": "032882b2b2fecdf9",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "e53d2525c31d2b4d",
        "type": "ui_spacer",
        "z": "c4caa3f9e2fc8dc9",
        "name": "spacer",
        "group": "032882b2b2fecdf9",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "41ae6e91d96883f5",
        "type": "ui_spacer",
        "z": "c4caa3f9e2fc8dc9",
        "name": "spacer",
        "group": "c34fbfa77921ce15",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "dee7608cbd8ed713",
        "type": "ui_spacer",
        "z": "c4caa3f9e2fc8dc9",
        "name": "spacer",
        "group": "c34fbfa77921ce15",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "371f755b1880e33d",
        "type": "ui_spacer",
        "z": "c4caa3f9e2fc8dc9",
        "name": "spacer",
        "group": "c34fbfa77921ce15",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "625c9fb53d0b07b3",
        "type": "ui_spacer",
        "z": "c4caa3f9e2fc8dc9",
        "name": "spacer",
        "group": "c34fbfa77921ce15",
        "order": 9,
        "width": 8,
        "height": 1
    },
    {
        "id": "a5455ca73912b0af",
        "type": "ui_spacer",
        "z": "c4caa3f9e2fc8dc9",
        "name": "spacer",
        "group": "c34fbfa77921ce15",
        "order": 10,
        "width": 14,
        "height": 1
    },
    {
        "id": "a8929a170f95ef11",
        "type": "ui_group",
        "name": "Info",
        "tab": "70f0c9a6.b4de68",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": true,
        "className": ""
    },
    {
        "id": "d7901f40.2659d",
        "type": "ui_tab",
        "name": "Date",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "23b8a0364a04467d",
        "type": "ui_group",
        "name": "Default",
        "tab": "d7901f40.2659d",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "371dd193c37ac2cc",
        "type": "ui_group",
        "d": true,
        "name": "Select datetime period",
        "tab": "fe8897304a518907",
        "order": 5,
        "disp": false,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1bf7a63390811538",
        "type": "ui_tab",
        "name": "Settings",
        "icon": "cog",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "bcdaebed.40b698",
        "type": "mqtt out",
        "z": "66a4ff9e.6ffac",
        "name": "",
        "topic": "living-labs/data",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b2797592163729b8",
        "x": 520,
        "y": 120,
        "wires": []
    },
    {
        "id": "5c672876.496df8",
        "type": "inject",
        "z": "66a4ff9e.6ffac",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "time",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "c2b4b43c.194ce8"
            ]
        ]
    },
    {
        "id": "c2b4b43c.194ce8",
        "type": "function",
        "z": "66a4ff9e.6ffac",
        "name": "create obj data",
        "func": "var id = \"LL-1\";\nvar location = \"ITA-Parma-Unipr\";\nvar time = Math.floor(msg.time/1000);\nmsg.payload = {\n    id: id,\n    location: location,\n    readings: [\n        {\n            data_id: \"env_temperature\",\n            unit: \"°C\",\n            data: [\n                {\n                    timestamp: time+Math.floor(Math.random()*10),\n                    val: (15+Math.random()*15).toFixed(2)\n                },\n                {\n                    timestamp: time+Math.floor(Math.random()*10),\n                    val: (15+Math.random()*15).toFixed(2)\n                },\n                {\n                    timestamp: time+Math.floor(Math.random()*10),\n                    val: (15+Math.random()*15).toFixed(2)\n                }\n            ]\n        },\n        {\n            data_id: \"batt_voltage\",\n            unit: \"V\",\n            data: [\n                {\n                    timestamp: time+Math.floor(Math.random()*10),\n                    val: (10+Math.random()*4).toFixed(2)\n                },\n                {\n                    timestamp: time+Math.floor(Math.random()*10),\n                    val: (10+Math.random()*4).toFixed(2)\n                }\n            ]\n        },\n        {\n            data_id: \"env_humidity\",\n            unit: \"%\",\n            data: [\n                {\n                    timestamp: time+Math.floor(Math.random()*10),\n                    val: (50+Math.random()*30).toFixed(2)\n                }\n            ]\n        },\n        {\n            data_id: \"batt_current\",\n            unit: \"A\",\n            data: [\n                {\n                    timestamp: time+Math.floor(Math.random()*10),\n                    val: (0.5+Math.random()*2).toFixed(2)\n                }\n            ]\n        },\n        {\n            data_id: \"batt_soc\",\n            unit: \"%\",\n            data: [\n                {\n                    timestamp: time+Math.floor(Math.random()*10),\n                    val: (20+Math.random()*50).toFixed(2)\n                }\n            ]\n        },\n        {\n            data_id: \"pv_current\",\n            unit: \"A\",\n            data: [\n                {\n                    timestamp: time+Math.floor(Math.random()*10),\n                    val: (1+Math.random()*4).toFixed(2)\n                }\n            ]\n        },\n        {\n            data_id: \"pv_voltage\",\n            unit: \"V\",\n            data: [\n                {\n                    timestamp: time+Math.floor(Math.random()*10),\n                    val: (11+Math.random()*9).toFixed(2)\n                }\n            ]\n        },\n        {\n            data_id: \"load_current\",\n            unit: \"A\",\n            data: [\n                {\n                    timestamp: time+Math.floor(Math.random()*10),\n                    val: (2+Math.random()*4).toFixed(2)\n                }\n            ]\n        },\n        {\n            data_id: \"load_voltage\",\n            unit: \"V\",\n            data: [\n                {\n                    timestamp: time+Math.floor(Math.random()*10),\n                    val: (12+Math.random()*2).toFixed(2)\n                }\n            ]\n        }\n    ]\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 120,
        "wires": [
            [
                "bcdaebed.40b698"
            ]
        ]
    },
    {
        "id": "91b979ee.e701b8",
        "type": "inject",
        "z": "66a4ff9e.6ffac",
        "name": "",
        "props": [
            {
                "p": "time",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "c2b4b43c.194ce8"
            ]
        ]
    },
    {
        "id": "1506c6fc3e03d0b3",
        "type": "inject",
        "z": "363ae2191f140465",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 80,
        "wires": [
            [
                "517028817afb567a"
            ]
        ]
    },
    {
        "id": "fdee44f320f2ddbf",
        "type": "mqtt out",
        "z": "363ae2191f140465",
        "name": "",
        "topic": "living-labs/datetime",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b2797592163729b8",
        "x": 570,
        "y": 140,
        "wires": []
    },
    {
        "id": "4f4ff47458ff061a",
        "type": "ui_button",
        "z": "363ae2191f140465",
        "name": "",
        "group": "8de535f3426c7c74",
        "order": 2,
        "width": "4",
        "height": 1,
        "passthru": false,
        "label": "Update datetime",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 140,
        "wires": [
            [
                "517028817afb567a"
            ]
        ]
    },
    {
        "id": "edf69b94ff593071",
        "type": "join",
        "z": "363ae2191f140465",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "1",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 270,
        "y": 300,
        "wires": [
            [
                "89c7f06deaba54b3"
            ]
        ]
    },
    {
        "id": "60e5e14befaf520e",
        "type": "ui_switch",
        "z": "363ae2191f140465",
        "name": "",
        "label": "Run",
        "tooltip": "",
        "group": "c34fbfa77921ce15",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "run",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 127.9999885559082,
        "y": 321.0000171661377,
        "wires": [
            [
                "edf69b94ff593071"
            ]
        ]
    },
    {
        "id": "ee4dd2d1165bfba5",
        "type": "ui_switch",
        "z": "363ae2191f140465",
        "name": "",
        "label": "Load",
        "tooltip": "",
        "group": "c34fbfa77921ce15",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "load",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 127.9999885559082,
        "y": 281.0000171661377,
        "wires": [
            [
                "edf69b94ff593071"
            ]
        ]
    },
    {
        "id": "89c7f06deaba54b3",
        "type": "switch",
        "z": "363ae2191f140465",
        "name": "",
        "property": "selectedID",
        "propertyType": "global",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 300,
        "wires": [
            [
                "5e804feb59ebb02a"
            ],
            [
                "104cce666467579d"
            ]
        ]
    },
    {
        "id": "5e804feb59ebb02a",
        "type": "function",
        "z": "363ae2191f140465",
        "name": "add id to global cmd",
        "func": "var id = global.get(\"selectedID\");\nglobal.set(\"cmd_\"+id, msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 280,
        "wires": [
            [
                "dc8a86e6d5dc9be3"
            ]
        ]
    },
    {
        "id": "104cce666467579d",
        "type": "function",
        "z": "363ae2191f140465",
        "name": "notification message",
        "func": "msg.topic = \"No ID selected!\";\nmsg.payload = \"Please select an ID to send the command\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 320,
        "wires": [
            [
                "67fa5535314a69ca"
            ]
        ]
    },
    {
        "id": "442470fdfa8cc991",
        "type": "mqtt out",
        "z": "363ae2191f140465",
        "name": "",
        "topic": "living-labs/cmd",
        "qos": "0",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b2797592163729b8",
        "x": 1120,
        "y": 280,
        "wires": []
    },
    {
        "id": "67fa5535314a69ca",
        "type": "ui_toast",
        "z": "363ae2191f140465",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 810,
        "y": 320,
        "wires": []
    },
    {
        "id": "8774c36bd36f984a",
        "type": "ui_button",
        "z": "363ae2191f140465",
        "name": "",
        "group": "032882b2b2fecdf9",
        "order": 2,
        "width": "4",
        "height": 1,
        "passthru": false,
        "label": "Delete data",
        "tooltip": "",
        "color": "white",
        "bgcolor": "black",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "8179d450424cc86a"
            ]
        ]
    },
    {
        "id": "8179d450424cc86a",
        "type": "switch",
        "z": "363ae2191f140465",
        "name": "",
        "property": "selectedID",
        "propertyType": "global",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 290,
        "y": 460,
        "wires": [
            [
                "1f71402f5f76ea18"
            ],
            [
                "67b9513488908903"
            ]
        ]
    },
    {
        "id": "1f71402f5f76ea18",
        "type": "function",
        "z": "363ae2191f140465",
        "name": "notification message",
        "func": "msg.topic = \"No ID selected!\";\nmsg.payload = \"Please select an ID to send the command\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 440,
        "wires": [
            [
                "99abb0addbce07e1"
            ]
        ]
    },
    {
        "id": "99abb0addbce07e1",
        "type": "ui_toast",
        "z": "363ae2191f140465",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 690,
        "y": 440,
        "wires": []
    },
    {
        "id": "e0f6f00e4c6bb75d",
        "type": "ui_toast",
        "z": "363ae2191f140465",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "YES",
        "cancel": "NO",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 670,
        "y": 480,
        "wires": [
            [
                "b45d5625f11cba63"
            ]
        ]
    },
    {
        "id": "b45d5625f11cba63",
        "type": "switch",
        "z": "363ae2191f140465",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "YES",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NO",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 480,
        "wires": [
            [
                "97a4419744d41071"
            ],
            []
        ]
    },
    {
        "id": "67b9513488908903",
        "type": "function",
        "z": "363ae2191f140465",
        "name": "notification message",
        "func": "msg.topic = \"Do you really want to delete permanentely the data?\";\nmsg.payload = \"ID selected: \" + global.get(\"selectedID\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 480,
        "wires": [
            [
                "e0f6f00e4c6bb75d"
            ]
        ]
    },
    {
        "id": "97a4419744d41071",
        "type": "template",
        "z": "363ae2191f140465",
        "name": "",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "DELETE FROM\n    readings\nWHERE\n    device_id=\"{{global.selectedID}}\";",
        "output": "str",
        "x": 820,
        "y": 540,
        "wires": [
            [
                "c260ecfbf2c064ac"
            ]
        ]
    },
    {
        "id": "c260ecfbf2c064ac",
        "type": "sqlite",
        "z": "363ae2191f140465",
        "mydb": "c34d6f8a.52a95",
        "sqlquery": "msg.topic",
        "sql": "SELECT DISTINCT device_id FROM info;",
        "name": "delete ID",
        "x": 820,
        "y": 600,
        "wires": [
            [
                "2e1d3da7e880c697"
            ]
        ]
    },
    {
        "id": "2e1d3da7e880c697",
        "type": "link out",
        "z": "363ae2191f140465",
        "name": "deleted data",
        "mode": "link",
        "links": [
            "04febf4c0112c61b",
            "0a8e12393cc7f73f",
            "2552794ee96c72da",
            "45d67645a9fb5f4f",
            "5b83ac3fc008f905",
            "8179d6f62239bbb1",
            "a4d744909d437879",
            "bb5d129af9d09876",
            "f1a5136bdc1e1866",
            "de5d664cbed15892",
            "e8902799817cca8f"
        ],
        "x": 965,
        "y": 700,
        "wires": []
    },
    {
        "id": "aaf528c83d557df8",
        "type": "inject",
        "z": "363ae2191f140465",
        "name": "DROP TABLE info",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 640,
        "wires": [
            [
                "5a24636487950cf5"
            ]
        ]
    },
    {
        "id": "5a24636487950cf5",
        "type": "sqlite",
        "z": "363ae2191f140465",
        "mydb": "c34d6f8a.52a95",
        "sqlquery": "fixed",
        "sql": "DROP TABLE info;",
        "name": "DROP TABLE",
        "x": 420,
        "y": 640,
        "wires": [
            [
                "2fc4f198c86522db"
            ]
        ]
    },
    {
        "id": "5f7e4dfd49b6c529",
        "type": "inject",
        "z": "363ae2191f140465",
        "name": "DROP TABLE readings",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 220,
        "y": 700,
        "wires": [
            [
                "cf73a740d103b9a8"
            ]
        ]
    },
    {
        "id": "cf73a740d103b9a8",
        "type": "sqlite",
        "z": "363ae2191f140465",
        "mydb": "c34d6f8a.52a95",
        "sqlquery": "fixed",
        "sql": "DROP TABLE readings;",
        "name": "DROP TABLE",
        "x": 420,
        "y": 700,
        "wires": [
            [
                "6663713a63e10842"
            ]
        ]
    },
    {
        "id": "e8aae3a386d21d5a",
        "type": "inject",
        "z": "363ae2191f140465",
        "name": "DELETE id FROM info",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 220,
        "y": 760,
        "wires": [
            [
                "07fca1466e5a1a8d"
            ]
        ]
    },
    {
        "id": "ed66b50ae88d1efe",
        "type": "sqlite",
        "z": "363ae2191f140465",
        "mydb": "c34d6f8a.52a95",
        "sqlquery": "msg.topic",
        "sql": "DROP TABLE readings;",
        "name": "Delete",
        "x": 570,
        "y": 760,
        "wires": [
            [
                "2e1d3da7e880c697"
            ]
        ]
    },
    {
        "id": "07fca1466e5a1a8d",
        "type": "template",
        "z": "363ae2191f140465",
        "name": "",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "DELETE FROM\n    info\nWHERE\n    device_id=\"{{global.selectedID}}\";",
        "output": "str",
        "x": 420,
        "y": 760,
        "wires": [
            [
                "ed66b50ae88d1efe"
            ]
        ]
    },
    {
        "id": "405e0e76f240eec2",
        "type": "comment",
        "z": "363ae2191f140465",
        "name": "ALERT",
        "info": "the status of the switch cannot be setted to the current one (saved in the global)\nwhen you select another device_id that has a different setup",
        "x": 130,
        "y": 240,
        "wires": []
    },
    {
        "id": "2fc4f198c86522db",
        "type": "sqlite",
        "z": "363ae2191f140465",
        "mydb": "c34d6f8a.52a95",
        "sqlquery": "fixed",
        "sql": "CREATE TABLE IF NOT EXISTS\ninfo (device_id TEXT UNIQUE, location TEXT);",
        "name": "create table info",
        "x": 600,
        "y": 640,
        "wires": [
            [
                "2e1d3da7e880c697"
            ]
        ]
    },
    {
        "id": "6663713a63e10842",
        "type": "sqlite",
        "z": "363ae2191f140465",
        "mydb": "c34d6f8a.52a95",
        "sqlquery": "fixed",
        "sql": "CREATE TABLE IF NOT EXISTS\nreadings\n(device_id TEXT, data_id TEXT, timestamp INTEGER, val REAL, unit TEXT);",
        "name": "create table readings",
        "x": 620,
        "y": 700,
        "wires": [
            [
                "2e1d3da7e880c697"
            ]
        ]
    },
    {
        "id": "517028817afb567a",
        "type": "function",
        "z": "363ae2191f140465",
        "name": "timestamp from ms to s",
        "func": "msg.payload = Math.round(msg.payload / 1000);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 140,
        "wires": [
            [
                "fdee44f320f2ddbf"
            ]
        ]
    },
    {
        "id": "dc8a86e6d5dc9be3",
        "type": "sqlite",
        "z": "363ae2191f140465",
        "mydb": "c34d6f8a.52a95",
        "sqlquery": "fixed",
        "sql": "SELECT DISTINCT\n    device_id\nFROM\n    info;",
        "name": "select IDs",
        "x": 780,
        "y": 280,
        "wires": [
            [
                "2533f003c4909405"
            ]
        ]
    },
    {
        "id": "2533f003c4909405",
        "type": "function",
        "z": "363ae2191f140465",
        "name": "compose cmd",
        "func": "var cmds = [];\nfor (let i = 0; i < msg.payload.length; i++) {\n    const id = msg.payload[i].device_id;\n    if (global.get(\"cmd_\"+id) != null) {\n        var cmd = {\n            \"id\":id\n        };\n        if (global.get(\"cmd_\" + id).run != null) {\n            cmd.run = global.get(\"cmd_\" + id).run;\n        }\n        if (global.get(\"cmd_\" + id).load != null) {\n            cmd.load = global.get(\"cmd_\" + id).load;\n        }\n        cmds.push(cmd);\n    }\n}\nmsg.payload = cmds;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 280,
        "wires": [
            [
                "14dd698a8dedcee1",
                "442470fdfa8cc991"
            ]
        ]
    },
    {
        "id": "14dd698a8dedcee1",
        "type": "debug",
        "z": "363ae2191f140465",
        "name": "/cmd",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 240,
        "wires": []
    },
    {
        "id": "377b26799312c54a",
        "type": "inject",
        "z": "e5a4ca6.b600a38",
        "name": "startup",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "8284e44e8c1628da",
                "40a309aa804128fa",
                "98ba410bba2d8670",
                "7cdf5f91330a25e8"
            ]
        ]
    },
    {
        "id": "8284e44e8c1628da",
        "type": "sqlite",
        "z": "e5a4ca6.b600a38",
        "mydb": "c34d6f8a.52a95",
        "sqlquery": "fixed",
        "sql": "CREATE TABLE IF NOT EXISTS\nreadings\n(device_id TEXT, data_id TEXT, timestamp INTEGER, val REAL, unit TEXT);",
        "name": "create table readings",
        "x": 340,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "40a309aa804128fa",
        "type": "change",
        "z": "e5a4ca6.b600a38",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "selectedID",
                "pt": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "98ba410bba2d8670",
        "type": "sqlite",
        "z": "e5a4ca6.b600a38",
        "mydb": "c34d6f8a.52a95",
        "sqlquery": "fixed",
        "sql": "CREATE TABLE IF NOT EXISTS\ninfo (device_id TEXT UNIQUE, location TEXT);",
        "name": "create table info",
        "x": 320,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "8043130f.d312",
        "type": "debug",
        "z": "e5a4ca6.b600a38",
        "name": "MQTT /test",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 220,
        "wires": []
    },
    {
        "id": "9c45fb9e.7aaca8",
        "type": "mqtt in",
        "z": "e5a4ca6.b600a38",
        "name": "",
        "topic": "living-labs/data",
        "qos": "0",
        "datatype": "json",
        "broker": "b2797592163729b8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 260,
        "wires": [
            [
                "8043130f.d312",
                "9baf41c8.c185f",
                "5553fd5f0479fee0"
            ]
        ]
    },
    {
        "id": "9baf41c8.c185f",
        "type": "function",
        "z": "e5a4ca6.b600a38",
        "name": "msg parser",
        "func": "var insertions = [];\nvar id = msg.payload.id;\nvar location = msg.payload.location;\nvar readings = msg.payload.readings;\n\nvar start_query = \"INSERT INTO readings VALUES (\\\"\"+ id + \"\\\", \\\"\";\nfor (let r = 0; r < readings.length; r++) {\n        const read = readings[r];\n        const data = read.data;\n        var mid_query = start_query + read.data_id + \"\\\", \";\n        for (let d = 0; d < data.length; d++) {\n                const element = data[d];\n                var end_query = mid_query\n                + element.timestamp + \", \"\n                + element.val + \", \\\"\"\n                + read.unit + \"\\\");\";\n                insertions.push(end_query);\n        }\n}\n\nmsg.payload = insertions;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 260,
        "wires": [
            [
                "152e7e68.390582",
                "7a7c5be470ec0584"
            ]
        ]
    },
    {
        "id": "5553fd5f0479fee0",
        "type": "function",
        "z": "e5a4ca6.b600a38",
        "name": "msg parser",
        "func": "msg.id = msg.payload.id;\nmsg.location = msg.payload.location\nmsg.topic = \"SELECT EXISTS(SELECT 1 FROM info WHERE device_id=\\\"\"+ msg.id + \"\\\" LIMIT 1) AS present;\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 360,
        "wires": [
            [
                "3e22da5ddbe2a995"
            ]
        ]
    },
    {
        "id": "152e7e68.390582",
        "type": "debug",
        "z": "e5a4ca6.b600a38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 260,
        "wires": []
    },
    {
        "id": "7a7c5be470ec0584",
        "type": "split",
        "z": "e5a4ca6.b600a38",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 470,
        "y": 300,
        "wires": [
            [
                "18cf775846e1d345"
            ]
        ]
    },
    {
        "id": "3e22da5ddbe2a995",
        "type": "sqlite",
        "z": "e5a4ca6.b600a38",
        "mydb": "c34d6f8a.52a95",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "check if existing id in info",
        "x": 510,
        "y": 360,
        "wires": [
            [
                "f8972ada33fd7bc9"
            ]
        ]
    },
    {
        "id": "18cf775846e1d345",
        "type": "change",
        "z": "e5a4ca6.b600a38",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "topic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 300,
        "wires": [
            [
                "6d1ade5a.b6516",
                "a1dc1b3202e70e78"
            ]
        ]
    },
    {
        "id": "f8972ada33fd7bc9",
        "type": "switch",
        "z": "e5a4ca6.b600a38",
        "name": "",
        "property": "payload[0].present",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 360,
        "wires": [
            [
                "653de9f45b8d168c"
            ],
            [
                "7f036e716a478cbf"
            ]
        ]
    },
    {
        "id": "6d1ade5a.b6516",
        "type": "sqlite",
        "z": "e5a4ca6.b600a38",
        "mydb": "c34d6f8a.52a95",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "insert readings",
        "x": 840,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "a1dc1b3202e70e78",
        "type": "debug",
        "z": "e5a4ca6.b600a38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 260,
        "wires": []
    },
    {
        "id": "653de9f45b8d168c",
        "type": "function",
        "z": "e5a4ca6.b600a38",
        "name": "msg parser",
        "func": "msg.topic = \"INSERT OR IGNORE INTO info VALUES (\\\"\" + msg.id + \"\\\", \\\"\" + msg.location + \"\\\");\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 340,
        "wires": [
            [
                "ef5664947996b133"
            ]
        ]
    },
    {
        "id": "ef5664947996b133",
        "type": "sqlite",
        "z": "e5a4ca6.b600a38",
        "mydb": "c34d6f8a.52a95",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "insert info",
        "x": 860,
        "y": 380,
        "wires": [
            [
                "9be24e922112a092"
            ]
        ]
    },
    {
        "id": "9be24e922112a092",
        "type": "link out",
        "z": "e5a4ca6.b600a38",
        "name": "new id found",
        "mode": "link",
        "links": [
            "8179d6f62239bbb1",
            "8329eb479e50e284"
        ],
        "x": 955,
        "y": 380,
        "wires": []
    },
    {
        "id": "bde9d0796cd74c6a",
        "type": "inject",
        "z": "e5a4ca6.b600a38",
        "name": "startup",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 160,
        "y": 480,
        "wires": [
            [
                "87b20b7fed27c053"
            ]
        ]
    },
    {
        "id": "87b20b7fed27c053",
        "type": "sqlite",
        "z": "e5a4ca6.b600a38",
        "mydb": "c34d6f8a.52a95",
        "sqlquery": "fixed",
        "sql": "SELECT DISTINCT\n    device_id\nFROM\n    info;",
        "name": "select IDs",
        "x": 320,
        "y": 500,
        "wires": [
            [
                "3cde4a6fbcbf40fa"
            ]
        ]
    },
    {
        "id": "3cde4a6fbcbf40fa",
        "type": "function",
        "z": "e5a4ca6.b600a38",
        "name": "set ids",
        "func": "msg.options = [];\nfor (let index = 0; index < msg.payload.length; index++) {\n    const id = msg.payload[index].device_id;\n    msg.options.push(id);\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 500,
        "wires": [
            [
                "809e1b370265e5b2"
            ]
        ]
    },
    {
        "id": "809e1b370265e5b2",
        "type": "ui_dropdown",
        "z": "e5a4ca6.b600a38",
        "name": "",
        "label": "LLab ID:",
        "tooltip": "",
        "place": "Select option",
        "group": "788b23d842bc47a5",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 580,
        "y": 500,
        "wires": [
            [
                "9a1c90b91b4ce4ab",
                "c92bab80d8c55015"
            ]
        ]
    },
    {
        "id": "9a1c90b91b4ce4ab",
        "type": "change",
        "z": "e5a4ca6.b600a38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "selectedID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 500,
        "wires": [
            [
                "29080e81bf1c028f"
            ]
        ]
    },
    {
        "id": "29080e81bf1c028f",
        "type": "template",
        "z": "e5a4ca6.b600a38",
        "name": "select location",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT\n    location\nFROM\n    info\nWHERE\n    device_id=\"{{global.selectedID}}\";",
        "output": "str",
        "x": 500,
        "y": 560,
        "wires": [
            [
                "0c1295d5e37cdc30"
            ]
        ]
    },
    {
        "id": "0c1295d5e37cdc30",
        "type": "sqlite",
        "z": "e5a4ca6.b600a38",
        "mydb": "c34d6f8a.52a95",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "select",
        "x": 650,
        "y": 560,
        "wires": [
            [
                "85be3f954c1e3736"
            ]
        ]
    },
    {
        "id": "85be3f954c1e3736",
        "type": "ui_text",
        "z": "e5a4ca6.b600a38",
        "group": "c34fbfa77921ce15",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Location:",
        "format": "{{msg.payload[0].location}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 820,
        "y": 560,
        "wires": []
    },
    {
        "id": "8179d6f62239bbb1",
        "type": "link in",
        "z": "e5a4ca6.b600a38",
        "name": "update ids",
        "links": [
            "2e1d3da7e880c697",
            "9be24e922112a092"
        ],
        "x": 205,
        "y": 520,
        "wires": [
            [
                "87b20b7fed27c053"
            ]
        ]
    },
    {
        "id": "7cdf5f91330a25e8",
        "type": "link out",
        "z": "e5a4ca6.b600a38",
        "name": "startup",
        "mode": "link",
        "links": [
            "a4d744909d437879",
            "0d6052f6f7668c90",
            "5b83ac3fc008f905",
            "0f964566badee013"
        ],
        "x": 255,
        "y": 160,
        "wires": []
    },
    {
        "id": "a4d744909d437879",
        "type": "link in",
        "z": "e5a4ca6.b600a38",
        "name": "clear location",
        "links": [
            "2e1d3da7e880c697",
            "7cdf5f91330a25e8",
            "1894884e1962338d"
        ],
        "x": 375,
        "y": 600,
        "wires": [
            [
                "3fdf948f7592f0ca"
            ]
        ]
    },
    {
        "id": "3fdf948f7592f0ca",
        "type": "change",
        "z": "e5a4ca6.b600a38",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload[0].location",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 600,
        "wires": [
            [
                "85be3f954c1e3736"
            ]
        ]
    },
    {
        "id": "7f036e716a478cbf",
        "type": "link out",
        "z": "e5a4ca6.b600a38",
        "name": "data from existing id",
        "mode": "link",
        "links": [
            "04febf4c0112c61b",
            "45d67645a9fb5f4f",
            "bb5d129af9d09876",
            "de5d664cbed15892",
            "f1a5136bdc1e1866",
            "e8902799817cca8f"
        ],
        "x": 795,
        "y": 420,
        "wires": []
    },
    {
        "id": "c92bab80d8c55015",
        "type": "link out",
        "z": "e5a4ca6.b600a38",
        "name": "selected id",
        "mode": "link",
        "links": [
            "04febf4c0112c61b",
            "bb5d129af9d09876",
            "f1a5136bdc1e1866",
            "45d67645a9fb5f4f",
            "b805bdb359a818cd",
            "de5d664cbed15892",
            "e8902799817cca8f"
        ],
        "x": 675,
        "y": 460,
        "wires": []
    },
    {
        "id": "5b83ac3fc008f905",
        "type": "link in",
        "z": "e5a4ca6.b600a38",
        "name": "clear lastseen",
        "links": [
            "2e1d3da7e880c697",
            "7cdf5f91330a25e8",
            "1894884e1962338d"
        ],
        "x": 375,
        "y": 720,
        "wires": [
            [
                "4eb7ad285244a977"
            ]
        ]
    },
    {
        "id": "4eb7ad285244a977",
        "type": "change",
        "z": "e5a4ca6.b600a38",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload[0].timestamp",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 720,
        "wires": [
            [
                "9209d62499924051"
            ]
        ]
    },
    {
        "id": "9209d62499924051",
        "type": "ui_text",
        "z": "e5a4ca6.b600a38",
        "group": "c34fbfa77921ce15",
        "order": 8,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Last seen:",
        "format": "{{msg.payload[0].timestamp}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 830,
        "y": 680,
        "wires": []
    },
    {
        "id": "5e257f5333cce050",
        "type": "inject",
        "z": "e5a4ca6.b600a38",
        "name": "startup",
        "props": [],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 160,
        "y": 680,
        "wires": [
            [
                "509444ad2bc65d99"
            ]
        ]
    },
    {
        "id": "599ba757243d3a26",
        "type": "sqlite",
        "z": "e5a4ca6.b600a38",
        "mydb": "c34d6f8a.52a95",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "select last seen",
        "x": 480,
        "y": 680,
        "wires": [
            [
                "594f94ffa39a978c"
            ]
        ]
    },
    {
        "id": "594f94ffa39a978c",
        "type": "function",
        "z": "e5a4ca6.b600a38",
        "name": "convert date",
        "func": "var date = new Date(msg.payload[0].timestamp*1000);\nvar lastseen = \"\" + ((date.getHours() < 10 ? '0' : '') + date.getHours()) + \":\" +\n                ((date.getMinutes() < 10 ? '0' : '') + date.getMinutes()) + \":\" +\n                ((date.getSeconds() < 10 ? '0' : '') + date.getSeconds()) + \" \" +    \n                ((date.getDate() < 10 ? '0' : '') + date.getDate()) + \"/\" +\n                (((date.getMonth() + 1) < 10 ? '0' : '') + (date.getMonth() + 1)) + \"/\" +\n                date.getFullYear();\nmsg.payload[0].timestamp = lastseen;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "9209d62499924051"
            ]
        ]
    },
    {
        "id": "509444ad2bc65d99",
        "type": "template",
        "z": "e5a4ca6.b600a38",
        "name": "",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT\n    timestamp\nFROM\n    readings\nWHERE\n    device_id=\"{{global.selectedID}}\"\nORDER BY\n    timestamp DESC\nLIMIT 1;",
        "output": "str",
        "x": 320,
        "y": 680,
        "wires": [
            [
                "599ba757243d3a26"
            ]
        ]
    },
    {
        "id": "3b9c097167adbd94",
        "type": "catch",
        "z": "e5a4ca6.b600a38",
        "name": "",
        "scope": [
            "509444ad2bc65d99",
            "599ba757243d3a26",
            "594f94ffa39a978c"
        ],
        "uncaught": false,
        "x": 290,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "62145079fbf8b7f2",
        "type": "inject",
        "z": "c4caa3f9e2fc8dc9",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "6ac59bb8f6610cd4",
                "4590f7747c350f6a"
            ]
        ]
    },
    {
        "id": "b1bb71b72d9fa9da",
        "type": "template",
        "z": "c4caa3f9e2fc8dc9",
        "name": "get voltages",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT\n    data_id, timestamp, val, unit\nFROM\n    readings\nWHERE\n    device_id=\"{{global.selectedID}}\"\nAND\n    (data_id=\"batt_voltage\"\n    OR\n    data_id=\"pv_voltage\"\n    OR\n    data_id=\"load_voltage\")\nORDER BY\n    timestamp ASC;",
        "output": "str",
        "x": 230,
        "y": 160,
        "wires": [
            [
                "109046a88dc97557"
            ]
        ]
    },
    {
        "id": "109046a88dc97557",
        "type": "sqlite",
        "z": "c4caa3f9e2fc8dc9",
        "mydb": "c34d6f8a.52a95",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "select",
        "x": 390,
        "y": 160,
        "wires": [
            [
                "f4e262423252cf2b"
            ]
        ]
    },
    {
        "id": "f4e262423252cf2b",
        "type": "function",
        "z": "c4caa3f9e2fc8dc9",
        "name": "create chart",
        "func": "var battery = [];\nvar pv = [];\nvar load = [];\nvar chart = [];\nvar series = [\"battery\", \"pv\", \"load\"];\n\nfor (let index = 0; index < msg.payload.length; index++) {\n    const element = msg.payload[index];\n    element.timestamp *= 1000;\n    switch (element.data_id) {\n        case \"batt_voltage\":\n            battery.push({ \"x\": element.timestamp, \"y\": parseFloat(element.val.toFixed(2)) });\n            break;\n        case \"pv_voltage\":\n            pv.push({ \"x\": element.timestamp, \"y\": parseFloat(element.val.toFixed(2)) });\n            break;\n        case \"load_voltage\":\n            load.push({ \"x\": element.timestamp, \"y\": parseFloat(element.val.toFixed(2)) });\n            break;\n        default:\n            break;  \n    }\n}\nvar data = [];\nconst len = global.get(\"len\");\nvar battery_filtered = []\nfor (let s = len; s < battery.length - len; s++) {\n    var sum = 0;\n    for (let m = 0; m <= len * 2; m++) {\n        const sample = battery[s + m - len].y;\n        sum += sample;\n    }\n    battery_filtered.push({ \"x\": battery[s].x, \"y\": parseFloat((sum / (len * 2 + 1)).toFixed(2)) });\n}\ndata.push(battery_filtered);\n\nvar pv_filtered = []\nfor (let s = len; s < pv.length-len; s++) {\n    var sum = 0;\n    for (let m = 0; m <= len * 2; m++) {\n        const sample = pv[s + m - len].y;\n        sum += sample;\n    }\n    pv_filtered.push({ \"x\": pv[s].x, \"y\": parseFloat((sum / (len * 2 + 1)).toFixed(2)) });\n}\n\ndata.push(pv_filtered);\ndata.push(load);\nchart.push({\n    \"series\": series,\n    \"data\": data\n});\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 160,
        "wires": [
            [
                "e0f85cfd407dcde8",
                "e3afb26ad9e7d659"
            ]
        ]
    },
    {
        "id": "e0f85cfd407dcde8",
        "type": "ui_chart",
        "z": "c4caa3f9e2fc8dc9",
        "name": "",
        "group": "7c92c8983045d68c",
        "order": 1,
        "width": "18",
        "height": "5",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "40000",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 690,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "e3afb26ad9e7d659",
        "type": "debug",
        "z": "c4caa3f9e2fc8dc9",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 200,
        "wires": []
    },
    {
        "id": "04febf4c0112c61b",
        "type": "link in",
        "z": "c4caa3f9e2fc8dc9",
        "name": "update data",
        "links": [
            "2e1d3da7e880c697",
            "7f036e716a478cbf",
            "c92bab80d8c55015"
        ],
        "x": 105,
        "y": 160,
        "wires": [
            [
                "b1bb71b72d9fa9da"
            ]
        ]
    },
    {
        "id": "6ac59bb8f6610cd4",
        "type": "function",
        "z": "c4caa3f9e2fc8dc9",
        "name": "clear chart",
        "func": "msg.payload = [];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 60,
        "wires": [
            [
                "7fdebcd9929a2341"
            ]
        ]
    },
    {
        "id": "08a0bceef521a631",
        "type": "template",
        "z": "c4caa3f9e2fc8dc9",
        "name": "get currents",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT\n    data_id, timestamp, val, unit\nFROM\n    readings\nWHERE\n    device_id=\"{{global.selectedID}}\"\nAND\n    (data_id=\"batt_current\"\n    OR\n    data_id=\"pv_current\"\n    OR\n    data_id=\"load_current\")\nORDER BY\n    timestamp ASC;",
        "output": "str",
        "x": 230,
        "y": 300,
        "wires": [
            [
                "9315563e6d393b06"
            ]
        ]
    },
    {
        "id": "bb5d129af9d09876",
        "type": "link in",
        "z": "c4caa3f9e2fc8dc9",
        "name": "update data",
        "links": [
            "7f036e716a478cbf",
            "c92bab80d8c55015",
            "2e1d3da7e880c697",
            "1894884e1962338d"
        ],
        "x": 105,
        "y": 300,
        "wires": [
            [
                "08a0bceef521a631"
            ]
        ]
    },
    {
        "id": "9315563e6d393b06",
        "type": "sqlite",
        "z": "c4caa3f9e2fc8dc9",
        "mydb": "c34d6f8a.52a95",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "select",
        "x": 390,
        "y": 300,
        "wires": [
            [
                "3f6b9fa06b575972"
            ]
        ]
    },
    {
        "id": "3f6b9fa06b575972",
        "type": "function",
        "z": "c4caa3f9e2fc8dc9",
        "name": "create chart",
        "func": "var battery = [];\nvar pv = [];\nvar load = [];\nvar chart = [];\nvar series = [\"battery\", \"pv\", \"load\"];\n\nfor (let index = 0; index < msg.payload.length; index++) {\n    const element = msg.payload[index];\n    element.timestamp *= 1000;\n    switch (element.data_id) {\n        case \"batt_current\":\n            battery.push({ \"x\": element.timestamp, \"y\": parseFloat(element.val.toFixed(2)) });\n            break;\n        case \"pv_current\":\n            pv.push({ \"x\": element.timestamp, \"y\": parseFloat(element.val.toFixed(2)) });\n            break;\n        case \"load_current\":\n            load.push({ \"x\": element.timestamp, \"y\": parseFloat(element.val.toFixed(2)) });\n            break;\n        default:\n            break;  \n    }\n}\nvar data = [];\n\nconst len = global.get(\"len\");\nvar pv_filtered = []\nfor (let s = len; s < pv.length - len; s++) {\n    var sum = 0;\n    for (let m = 0; m <= len * 2; m++) {\n        const sample = pv[s + m - len].y;\n        sum += sample;\n    }\n    pv_filtered.push({ \"x\": pv[s].x, \"y\": parseFloat((sum / (len * 2 + 1)).toFixed(2)) });\n}\ndata.push(pv_filtered);\nvar battery_filtered = []\nfor (let s = len; s < battery.length - len; s++) {\n    var sum = 0;\n    for (let m = 0; m <= len * 2; m++) {\n        const sample = battery[s + m - len].y;\n        sum += sample;\n    }\n    battery_filtered.push({ \"x\": battery[s].x, \"y\": parseFloat((sum / (len * 2 + 1)).toFixed(2)) });\n}\ndata.push(battery_filtered);\ndata.push(load);\nchart.push({\n    \"series\": series,\n    \"data\": data\n});\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 300,
        "wires": [
            [
                "6126ab7f65cb3d92",
                "0a937e540c6c5197"
            ]
        ]
    },
    {
        "id": "6126ab7f65cb3d92",
        "type": "ui_chart",
        "z": "c4caa3f9e2fc8dc9",
        "name": "",
        "group": "398221e737df06e0",
        "order": 1,
        "width": "18",
        "height": "5",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "40000",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 690,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "0a937e540c6c5197",
        "type": "debug",
        "z": "c4caa3f9e2fc8dc9",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 340,
        "wires": []
    },
    {
        "id": "7fdebcd9929a2341",
        "type": "link out",
        "z": "c4caa3f9e2fc8dc9",
        "name": "clear chart",
        "mode": "link",
        "links": [
            "bed6dde3cd6c4d26",
            "06122f57c3402678",
            "ae25588bad3a1690",
            "0a8e12393cc7f73f",
            "99cf1fa3d06c0ba2",
            "e43ec7bc806500a8"
        ],
        "x": 405,
        "y": 60,
        "wires": []
    },
    {
        "id": "bed6dde3cd6c4d26",
        "type": "link in",
        "z": "c4caa3f9e2fc8dc9",
        "name": "startup clear",
        "links": [
            "7fdebcd9929a2341"
        ],
        "x": 585,
        "y": 120,
        "wires": [
            [
                "e0f85cfd407dcde8"
            ]
        ]
    },
    {
        "id": "06122f57c3402678",
        "type": "link in",
        "z": "c4caa3f9e2fc8dc9",
        "name": "startup clear",
        "links": [
            "7fdebcd9929a2341"
        ],
        "x": 585,
        "y": 260,
        "wires": [
            [
                "6126ab7f65cb3d92"
            ]
        ]
    },
    {
        "id": "ded9ccc5e49c331b",
        "type": "ui_gauge",
        "z": "c4caa3f9e2fc8dc9",
        "name": "",
        "group": "c34fbfa77921ce15",
        "order": 1,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Battery State of Charge",
        "label": "%",
        "format": "{{msg.payload[0].val}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ff0000",
            "#e6e600",
            "#00d652"
        ],
        "seg1": "20",
        "seg2": "40",
        "diff": false,
        "className": "",
        "x": 730,
        "y": 460,
        "wires": []
    },
    {
        "id": "f1a5136bdc1e1866",
        "type": "link in",
        "z": "c4caa3f9e2fc8dc9",
        "name": "update data",
        "links": [
            "7f036e716a478cbf",
            "c92bab80d8c55015",
            "2e1d3da7e880c697",
            "1894884e1962338d"
        ],
        "x": 95,
        "y": 460,
        "wires": [
            [
                "ecddd48e0397f84e"
            ]
        ]
    },
    {
        "id": "ecddd48e0397f84e",
        "type": "template",
        "z": "c4caa3f9e2fc8dc9",
        "name": "get battery soc",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT\n    data_id, timestamp, val\nFROM\n    readings\nWHERE\n    device_id=\"{{global.selectedID}}\"\nAND\n    (data_id=\"batt_soc\")\nORDER BY\n    timestamp DESC\nLIMIT 1;",
        "output": "str",
        "x": 220,
        "y": 460,
        "wires": [
            [
                "49205c1edc9ea1ee"
            ]
        ]
    },
    {
        "id": "ef10604ab71dc62b",
        "type": "sqlite",
        "z": "c4caa3f9e2fc8dc9",
        "mydb": "c34d6f8a.52a95",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "select",
        "x": 530,
        "y": 460,
        "wires": [
            [
                "ded9ccc5e49c331b"
            ]
        ]
    },
    {
        "id": "9c9dbe98dd1c86c1",
        "type": "ui_dropdown",
        "z": "c4caa3f9e2fc8dc9",
        "name": "",
        "label": "Select data ID",
        "tooltip": "",
        "place": "Select option",
        "group": "a82ebc6fad682ccd",
        "order": 1,
        "width": 10,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 680,
        "y": 580,
        "wires": [
            [
                "bcbf725ac540ecb4"
            ]
        ]
    },
    {
        "id": "51b46e126788862e",
        "type": "inject",
        "z": "c4caa3f9e2fc8dc9",
        "name": "startup",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 100,
        "y": 580,
        "wires": [
            [
                "0ddcb0a7833c9040"
            ]
        ]
    },
    {
        "id": "eccfb4c9a81a24bd",
        "type": "sqlite",
        "z": "c4caa3f9e2fc8dc9",
        "mydb": "c34d6f8a.52a95",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "select IDs",
        "x": 400,
        "y": 580,
        "wires": [
            [
                "f82fe2ee1ae432fa"
            ]
        ]
    },
    {
        "id": "f82fe2ee1ae432fa",
        "type": "function",
        "z": "c4caa3f9e2fc8dc9",
        "name": "set ids",
        "func": "msg.options = [];\nfor (let index = 0; index < msg.payload.length; index++) {\n    const data_id = msg.payload[index].data_id;\n    msg.options.push(data_id);\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 580,
        "wires": [
            [
                "9c9dbe98dd1c86c1"
            ]
        ]
    },
    {
        "id": "bcbf725ac540ecb4",
        "type": "change",
        "z": "c4caa3f9e2fc8dc9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dataID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 580,
        "wires": [
            [
                "fad7302f9c2ce5e3",
                "ff28e264b5e8600e"
            ]
        ]
    },
    {
        "id": "fad7302f9c2ce5e3",
        "type": "template",
        "z": "c4caa3f9e2fc8dc9",
        "name": "select vals",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT\n    timestamp, val\nFROM\n    readings\nWHERE\n    device_id=\"{{global.selectedID}}\"\nAND\n    data_id=\"{{global.dataID}}\"\nORDER BY \n    timestamp ASC;",
        "output": "str",
        "x": 350,
        "y": 780,
        "wires": [
            [
                "189e72f3326caa77"
            ]
        ]
    },
    {
        "id": "189e72f3326caa77",
        "type": "sqlite",
        "z": "c4caa3f9e2fc8dc9",
        "mydb": "c34d6f8a.52a95",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "select *",
        "x": 500,
        "y": 780,
        "wires": [
            [
                "aac5750bca7a743d"
            ]
        ]
    },
    {
        "id": "ae25588bad3a1690",
        "type": "link in",
        "z": "c4caa3f9e2fc8dc9",
        "name": "startup clear",
        "links": [
            "7fdebcd9929a2341"
        ],
        "x": 695,
        "y": 820,
        "wires": [
            [
                "5fb2d6243fc47a7e"
            ]
        ]
    },
    {
        "id": "5fb2d6243fc47a7e",
        "type": "ui_chart",
        "z": "c4caa3f9e2fc8dc9",
        "name": "",
        "group": "a82ebc6fad682ccd",
        "order": 3,
        "width": "18",
        "height": "5",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 810,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "aac5750bca7a743d",
        "type": "function",
        "z": "c4caa3f9e2fc8dc9",
        "name": "create chart",
        "func": "var series_name = global.get(\"dataID\");\nvar data = [];\nvar chart = [];\n\nfor (let index = 0; index < msg.payload.length; index++) {\n    const element = msg.payload[index];\n    element.timestamp *= 1000;\n    data.push({ \"x\": element.timestamp, \"y\": parseFloat(element.val.toFixed(2)) });\n}\nconst len = global.get(\"len\");\nvar data_filtered = []\nfor (let s = len; s < data.length - len; s++) {\n    var sum = 0;\n    for (let m = 0; m <= len * 2; m++) {\n        const sample = data[s + m - len].y;\n        sum += sample;\n    }\n    data_filtered.push({ \"x\": data[s].x, \"y\": parseFloat((sum / (len * 2 + 1)).toFixed(2)) });\n}\nchart.push({\n    \"series\": [series_name],\n    \"data\": [data_filtered]\n});\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 780,
        "wires": [
            [
                "d91fb1076e9cf9bf",
                "5fb2d6243fc47a7e"
            ]
        ]
    },
    {
        "id": "d91fb1076e9cf9bf",
        "type": "debug",
        "z": "c4caa3f9e2fc8dc9",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 780,
        "wires": []
    },
    {
        "id": "45d67645a9fb5f4f",
        "type": "link in",
        "z": "c4caa3f9e2fc8dc9",
        "name": "update data",
        "links": [
            "2e1d3da7e880c697",
            "7f036e716a478cbf",
            "c92bab80d8c55015"
        ],
        "x": 135,
        "y": 620,
        "wires": [
            [
                "0ddcb0a7833c9040"
            ]
        ]
    },
    {
        "id": "0a8e12393cc7f73f",
        "type": "link in",
        "z": "c4caa3f9e2fc8dc9",
        "name": "startup clear",
        "links": [
            "2e1d3da7e880c697",
            "7fdebcd9929a2341",
            "1894884e1962338d"
        ],
        "x": 345,
        "y": 420,
        "wires": [
            [
                "0b7ecab834a44d16"
            ]
        ]
    },
    {
        "id": "0b7ecab834a44d16",
        "type": "change",
        "z": "c4caa3f9e2fc8dc9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload[0].val",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 420,
        "wires": [
            [
                "ded9ccc5e49c331b"
            ]
        ]
    },
    {
        "id": "ff28e264b5e8600e",
        "type": "template",
        "z": "c4caa3f9e2fc8dc9",
        "name": "select unit",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT\n    unit\nFROM\n    readings\nWHERE\n    device_id=\"{{global.selectedID}}\"\nAND\n    data_id=\"{{global.dataID}}\";",
        "output": "str",
        "x": 520,
        "y": 700,
        "wires": [
            [
                "4e2bdedd4448b253"
            ]
        ]
    },
    {
        "id": "4e2bdedd4448b253",
        "type": "sqlite",
        "z": "c4caa3f9e2fc8dc9",
        "mydb": "c34d6f8a.52a95",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "select unit",
        "x": 660,
        "y": 700,
        "wires": [
            [
                "de1157e1a145a7ac"
            ]
        ]
    },
    {
        "id": "de1157e1a145a7ac",
        "type": "ui_text",
        "z": "c4caa3f9e2fc8dc9",
        "group": "a82ebc6fad682ccd",
        "order": 2,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "Measure unit: ",
        "format": "{{msg.payload[0].unit}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 840,
        "y": 700,
        "wires": []
    },
    {
        "id": "e43ec7bc806500a8",
        "type": "link in",
        "z": "c4caa3f9e2fc8dc9",
        "name": "startup clear",
        "links": [
            "7fdebcd9929a2341"
        ],
        "x": 455,
        "y": 660,
        "wires": [
            [
                "e120342e89eb3ab2"
            ]
        ]
    },
    {
        "id": "e120342e89eb3ab2",
        "type": "change",
        "z": "c4caa3f9e2fc8dc9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload[0].unit",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 660,
        "wires": [
            [
                "de1157e1a145a7ac"
            ]
        ]
    },
    {
        "id": "2552794ee96c72da",
        "type": "link in",
        "z": "c4caa3f9e2fc8dc9",
        "name": "clear charts",
        "links": [
            "2e1d3da7e880c697",
            "1894884e1962338d"
        ],
        "x": 165,
        "y": 20,
        "wires": [
            [
                "6ac59bb8f6610cd4"
            ]
        ]
    },
    {
        "id": "b96b7469095a5221",
        "type": "comment",
        "z": "c4caa3f9e2fc8dc9",
        "name": "Improve",
        "info": "the dropdown is update every time a new data arrives\n    -> update only id there are new data_id",
        "x": 260,
        "y": 540,
        "wires": []
    },
    {
        "id": "49205c1edc9ea1ee",
        "type": "switch",
        "z": "c4caa3f9e2fc8dc9",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 460,
        "wires": [
            [
                "ef10604ab71dc62b"
            ]
        ]
    },
    {
        "id": "0ddcb0a7833c9040",
        "type": "template",
        "z": "c4caa3f9e2fc8dc9",
        "name": "get data_id",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT DISTINCT\n    data_id\nFROM\n    readings\nWHERE\n    device_id = \"{{global.selectedID}}\"\nORDER BY\n    data_id ASC;",
        "output": "str",
        "x": 250,
        "y": 580,
        "wires": [
            [
                "eccfb4c9a81a24bd"
            ]
        ]
    },
    {
        "id": "de5d664cbed15892",
        "type": "link in",
        "z": "c4caa3f9e2fc8dc9",
        "name": "update data",
        "links": [
            "2e1d3da7e880c697",
            "7f036e716a478cbf",
            "c92bab80d8c55015"
        ],
        "x": 225,
        "y": 780,
        "wires": [
            [
                "fad7302f9c2ce5e3"
            ]
        ]
    },
    {
        "id": "4590f7747c350f6a",
        "type": "change",
        "z": "c4caa3f9e2fc8dc9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "len",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "8be060d.0b232a",
        "type": "ui_table",
        "z": "eae119be.e0ca48",
        "group": "a8929a170f95ef11",
        "name": "Info",
        "order": 1,
        "width": "18",
        "height": "3",
        "columns": [
            {
                "field": "device_id",
                "title": "Device ID",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "location",
                "title": "Location",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 430,
        "y": 100,
        "wires": []
    },
    {
        "id": "6fe86cf1322abb4b",
        "type": "function",
        "z": "eae119be.e0ca48",
        "name": "add human date",
        "func": "for (let i = 0; i < msg.payload.length; i++) {\n    const timestamp = msg.payload[i].timestamp;\n    var date = new Date(timestamp*1000);\n    msg.payload[i].timestamp = \"\" + ((date.getHours() < 10 ? '0' : '') + date.getHours()) + \":\" +\n                            ((date.getMinutes() < 10 ? '0' : '') + date.getMinutes()) + \":\" +\n                            ((date.getSeconds() < 10 ? '0' : '') + date.getSeconds()) + \" \" +    \n                            ((date.getDate() < 10 ? '0' : '') + date.getDate()) + \"/\" +\n                            (((date.getMonth() + 1) < 10 ? '0' : '') + (date.getMonth() + 1)) + \"/\" +\n                            date.getFullYear();\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 180,
        "wires": [
            [
                "d401537dc5c9afc2",
                "995c14d2133f7fb1"
            ]
        ]
    },
    {
        "id": "e8902799817cca8f",
        "type": "link in",
        "z": "eae119be.e0ca48",
        "name": "update data",
        "links": [
            "7f036e716a478cbf",
            "c92bab80d8c55015",
            "2e1d3da7e880c697",
            "1894884e1962338d"
        ],
        "x": 115,
        "y": 100,
        "wires": [
            [
                "65579892a3a0d4a1",
                "64817f91fc64f31e"
            ]
        ]
    },
    {
        "id": "65579892a3a0d4a1",
        "type": "sqlite",
        "z": "eae119be.e0ca48",
        "mydb": "c34d6f8a.52a95",
        "sqlquery": "fixed",
        "sql": "SELECT *\nFROM\n    readings\nORDER BY\n    timestamp DESC\nLIMIT 100;",
        "name": "select * readings",
        "x": 290,
        "y": 180,
        "wires": [
            [
                "6fe86cf1322abb4b"
            ]
        ]
    },
    {
        "id": "64817f91fc64f31e",
        "type": "sqlite",
        "z": "eae119be.e0ca48",
        "mydb": "c34d6f8a.52a95",
        "sqlquery": "fixed",
        "sql": "SELECT * FROM info;",
        "name": "select * info",
        "x": 270,
        "y": 100,
        "wires": [
            [
                "705eae2f44bd3d5a",
                "8be060d.0b232a"
            ]
        ]
    },
    {
        "id": "705eae2f44bd3d5a",
        "type": "debug",
        "z": "eae119be.e0ca48",
        "name": "debug 12",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 60,
        "wires": []
    },
    {
        "id": "d401537dc5c9afc2",
        "type": "debug",
        "z": "eae119be.e0ca48",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 220,
        "wires": []
    },
    {
        "id": "995c14d2133f7fb1",
        "type": "ui_table",
        "z": "eae119be.e0ca48",
        "group": "fc5603e7.a1d5c",
        "name": "Readings",
        "order": 1,
        "width": "18",
        "height": 10,
        "columns": [
            {
                "field": "device_id",
                "title": "Device ID",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "data_id",
                "title": "Data ID",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "timestamp",
                "title": "Timestamp",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "val",
                "title": "Value",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "unit",
                "title": "Unit of Measure",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 700,
        "y": 180,
        "wires": []
    },
    {
        "id": "0f964566badee013",
        "type": "link in",
        "z": "eae119be.e0ca48",
        "name": "setup log",
        "links": [
            "7cdf5f91330a25e8"
        ],
        "x": 115,
        "y": 180,
        "wires": [
            [
                "65579892a3a0d4a1",
                "64817f91fc64f31e"
            ]
        ]
    },
    {
        "id": "fd80efad1ee0864f",
        "type": "function",
        "z": "0c50d7e1ab364813",
        "name": "convert in UNIX timestamp",
        "func": "var startD = msg.payload.startD.split(\"T\")[0];\nvar startT = msg.payload.startT.split(\"T\")[1];\nvar endD = msg.payload.endD.split(\"T\")[0];\nvar endT = msg.payload.endT.split(\"T\")[1];\n\nvar start = startD.concat(\"T\", startT);\nvar startTimestamp = new Date(start);\n//Aggiungi 1gg e 1h in ms format\nconst addedTime = 86400000 + 3600000;\nmsg.start = (startTimestamp.getTime() + addedTime) / 1000;\n\nvar end = endD.concat(\"T\", endT);\nvar endTimestamp = new Date(end);\nmsg.end = (endTimestamp.getTime() + addedTime) / 1000;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 120,
        "wires": [
            [
                "e9907a8544c5d1a5",
                "eced4967436cd0a7"
            ]
        ]
    },
    {
        "id": "86fb6ffad9aef6b7",
        "type": "ui_form",
        "z": "0c50d7e1ab364813",
        "name": "",
        "label": "Select Graphs' Visualization Period",
        "group": "371dd193c37ac2cc",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Start Date",
                "value": "startD",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "Start Time",
                "value": "startT",
                "type": "time",
                "required": true,
                "rows": null
            },
            {
                "label": "End Date",
                "value": "endD",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "End Time",
                "value": "endT",
                "type": "time",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "startD": "",
            "startT": "",
            "endD": "",
            "endT": ""
        },
        "payload": "",
        "submit": "Set",
        "cancel": "Cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "",
        "x": 220,
        "y": 120,
        "wires": [
            [
                "fd80efad1ee0864f"
            ]
        ]
    },
    {
        "id": "e9907a8544c5d1a5",
        "type": "debug",
        "z": "0c50d7e1ab364813",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 80,
        "wires": []
    },
    {
        "id": "eced4967436cd0a7",
        "type": "change",
        "z": "0c50d7e1ab364813",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "startTimestamp",
                "pt": "global",
                "to": "start",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "endTimestamp",
                "pt": "global",
                "to": "end",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 160,
        "wires": [
            []
        ]
    }
]